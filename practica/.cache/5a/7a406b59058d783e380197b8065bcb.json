{"id":"ejercicios/prototype.html","dependencies":[{"name":"C:\\Users\\Administrator\\Desktop\\practica de js a ts\\practica\\package.json","includedInParent":true,"mtime":1603306172244}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Prototype</title>\r\n</head>\r\n\r\n<body>\r\n    <a href=\"/ejercicios/\">Go back</a>\r\n    <p><em>Abre la consola</em></p>\r\n\r\n    <script>//objeto común y corriente\n\n/* const zelda = { name: \"Zelda\" }\r\nzelda.saludar = function () {\r\n    console.log(`Hola soy ${this.name}`)\r\n}\r\nzelda.saludar(); */\n//Ser eficientes\nfunction Hero(name) {\n  const hero = {\n    name: name\n  };\n\n  hero.saludar = function () {\n    console.log(`Hola, soy ${this.name}`);\n  };\n\n  return hero;\n} //creando la función afuera de la clase para no llamarlo cada vez\n\n/*  const heroMethods = {\r\n     saludar: function () {\r\n         console.log(`Hola, me llamo ${this.name}`)\r\n     }\r\n } */\n//Object.create\n\n/* const nuevoObjeto = Object.create(objeto) */\n//Aquí, al pasarle heroMethods, se le van a pasar al nuevo hero\n\n/* function Hero(name) {\r\n    const hero = Object.create(heroMethods)\r\n    hero.name = name;\r\n      return hero;\r\n}\r\n  const zelda = Hero(\"Zelda\")\r\nzelda.saludar();\r\n  const link = Hero(\"Link\")\r\nlink.saludar();\r\n  const pan = Hero(\"pan\");\r\npan.saludar();\r\n*/\n//Los métodos de hero dentro de un Hero\n\n/* const heroMethods = {\r\n           saludar: function () {\r\n               console.log(`Hola, me llamo ${this.name}`)\r\n           }\r\n       } */\n\n/* function Hero(name) {\r\n    const hero = Object.create(Hero.prototype)\r\n    hero.name = name;\r\n      return hero;\r\n}\r\n  Hero.prototype.saludar = function () {\r\n    console.log(`Soy superheroe, ${this.name}`)\r\n}\r\n  const zelda = Hero(\"Zelda\")\r\nzelda.saludar();\r\n  const link = Hero(\"Link\")\r\nlink.saludar();\r\n  const pan = Hero(\"pan\");\r\npan.saludar(); */\n//Mejorar el codigo anterior usando New\n\n\nfunction Hero(name) {\n  // const hero = Object.create(Hero.prototype)\n  this.name = name; // return hero;\n}\n\nHero.prototype.saludar = function () {\n  console.log(`New: ${this.name}`);\n};\n\nconst zelda = new Hero(\"Zelda\");\nzelda.saludar();\nconst link = new Hero(\"Link\");\nlink.saludar();\nconst pan = new Hero(\"Pan\");\npan.saludar(); //Practicando new\n\nfunction Pokemon(nombre, tipo, ataque) {\n  this.nombre = nombre;\n  this.tipo = tipo;\n  this.ataque = ataque;\n}\n\nPokemon.prototype.presentar = function () {\n  console.log(`Hola, mi Pokemon se llama: ${this.nombre}`);\n};\n\nPokemon.prototype.mostrarTipo = function () {\n  console.log(`${this.nombre} es de tipo: ${this.tipo}`);\n};\n\nPokemon.prototype.atacar = function () {\n  console.log(`${this.nombre} ha utilizado ${this.ataque}`);\n};\n\nconst pikachu = new Pokemon(\"Pikachu\", \"Eléctrico\", \"Impactrueno\");\npikachu.presentar();\npikachu.mostrarTipo();\npikachu.atacar();</script>\r\n</body>\r\n\r\n</html>"},"sourceMaps":null,"error":null,"hash":"94239160b1f8fe5e494bbc81a2094bc4","cacheData":{"env":{}}}