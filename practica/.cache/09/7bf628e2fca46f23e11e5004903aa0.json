{"id":"ejercicios/callApplyYBind.html","dependencies":[{"name":"C:\\Users\\Administrator\\Desktop\\practica de js a ts\\practica\\package.json","includedInParent":true,"mtime":1603306172244}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n</head>\r\n\r\n<body>\r\n    <a href=\"/ejercicios/\">Go back</a>\r\n    <p><em>Abre la consola</em></p>\r\n\r\n    <ul>\r\n        <li><button class=\"call-to-action\">Aprender</button></li>\r\n        <li><button class=\"call-to-action\">Aprender más</button></li>\r\n        <li><button class=\"call-to-action\">¡Nunca parar de aprender!</button></li>\r\n    </ul>\r\n\r\n    <script>/* Establece this usando call */\nfunction saludar() {\n  console.log(`Hola, soy ${this.name} ${this.apellido}`);\n}\n\nconst richard = {\n  name: \"Richard\",\n  apellido: \"Aldana\"\n};\nsaludar.call(richard);\n\nfunction caminar(metros, direccion) {\n  console.log(`${this.name} camina ${metros} metros hacia ${direccion}`);\n}\n\ncaminar.call(richard, 400, \"norte\"); //Apply es como call pero los argumentos se pasan diferente, con un arreglo\n\ncaminar.apply(richard, [\"800\", \"noreste\"]); // o de esta manera como se haría propiamente\n\nconst valores = [800, 'noreste'];\ncaminar.apply(richard, valores);\n/*   Call - comma\r\n  Apply - Arreglo */\n//Establecer this en una nueva función usando bind. Bind construye una nueva función. No\n//Llama una función directamente cpmo las anteriores.\n\nconst daniel = {\n  name: \"Daniel\",\n  apellido: \"Sánchez\"\n};\nconst danielSaluda = saludar.bind(daniel);\ndanielSaluda(); //Bind con una función que recibe otros parámetros, primero de bindeay luego\n//se llama la función y se le añaden los parámetros en los paréntesis\n\nconst danielCamina = caminar.bind(daniel);\ndanielCamina(1000, \"este\"); //También se pueden llamar directamente en una función creada\n// como const danielCamina = caminar.bind(daniel, 100, \"sur\")\n\n/*    también se puede hacer CURRYING que es guardar valores parciales \r\n   en una función; ej: en este caso 200 estará guardado y solo la dirección varía*/\n\nconst andrea = {\n  name: \"Andrea\",\n  apellido: \"Aldana\"\n};\nconst andreaCamina = caminar.bind(andrea, \"200\");\nandreaCamina(\"sureste\"); //Ejercicios con los botones aplicando lo visto \n\nconst buttons = document.getElementsByClassName(\"call-to-action\");\n/*   buttons.forEach(button => {\r\n      button.onclick = () => alert(\"nunca pares de aprender\")\r\n  }) */\n\nArray.prototype.forEach.call(buttons, button => {\n  button.onclick = () => alert(\"nunca pares de aprender\");\n});</script>\r\n</body>\r\n\r\n</html>"},"sourceMaps":null,"error":null,"hash":"3870341f98c58402eb4e79b309d5ee24","cacheData":{"env":{}}}