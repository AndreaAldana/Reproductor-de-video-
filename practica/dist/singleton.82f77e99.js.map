{"version":3,"sources":["ejercicios/singleton/Singleton.ts","ejercicios/singleton/index.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,SAAA;AAAA;AAAA,YAAA;AAGI,WAAA,SAAA,GAAA,CAEC;;AAEM,EAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AACI,ACRR,IAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;ADSQ,QAAI,CAAC,SAAS,CAAC,QAAf,EAAyB;AACrB,ACRZ,IAAM,CAAC,CDQK,ECRF,ODQW,CAAC,GCRZ,CAAA,IDQE,GAAqB,ACRvB,CAAU,GDQiB,QCR3B,CDQuB,CCRjC,CDQY;AACH,ACRT,IAAM,CAAC,GAAG,WAAA,CAAA,OAAA,CAAU,WAAV,EAAV;AAEA,OAAO,CAAC,GAAR,CAAY,iBAAZ,EAA+B,CAAC,IAAI,CAApC;ADOQ,WAAO,SAAS,CAAC,QAAjB;AACH,GANM;;AAOX,SAAA,SAAA;AAdA,CAAA,EAAA;;AAgBA,OAAA,CAAA,OAAA,GAAe,SAAf","file":"singleton.82f77e99.js","sourceRoot":"..","sourcesContent":["class Singleton {\r\n    private static instance: Singleton;\r\n\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    static getInstance() {\r\n        //Si no existe, se crea y se regresa\r\n        if (!Singleton.instance) {\r\n            Singleton.instance = new Singleton();\r\n        }\r\n        return Singleton.instance;\r\n    }\r\n}\r\n\r\nexport default Singleton","import Singleton from './Singleton'\r\n\r\nconst a = Singleton.getInstance()\r\nconst b = Singleton.getInstance();\r\n\r\nconsole.log(\"A es igual a B?\", a == b)"]}