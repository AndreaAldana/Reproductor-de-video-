{"version":3,"sources":["assets/MediaPlayer.ts","assets/plugins/AutoPlay.ts","assets/plugins/AutoPause.ts","assets/index.ts"],"names":[],"mappings":"cACA;;;;;;AAEA,AEDA,ADAA,IDCA,AEDA,ADAA,QAAA,CCAA,EFCA;AAAA,AEDA,ADAA;ADCA,AEDA,ADAA,YDCA,AEDA,ADAA;ADII,AEDA,ADFA,WDGA,AEDA,ADFA,QAAA,CCEA,EFCA,ACHA,CDGY,AEDZ,ADFiB,MDGjB,EAAkB;AACd,AEDA,SFCK,AEDA,KFCL,GAAa,CEDb,GAAiB,EFCE,CAAC,CEDpB,CFCA;AACA,AEDA,ADHJ,EAAA,ODIS,AEDA,CDHT,CAAA,KDII,GAAe,CCJnB,CAAA,GAAA,CDIyB,CAAC,CEDtB,ADHJ,GCG8B,GFCX,EEDgB,EFCE,ACJjC,EDIA,ICJJ,EAAuB,QCGO,CAAwB,IAAxB,CAA6B,IAA7B,CAA1B;AFEA,AGTR,ADQQ,ADHA,IELR,IFKY,CDIC,AEDA,ADHA,MAAM,CAAC,CELpB,GHSQ,AGTR,CFKa,CAAa,KAAlB,EAAyB,ECGzB,GAA8B,CCRtC,CAAA,GDQ2C,ICR3C,CAAA,eAAA,CAAA,CAAA,ADQsC,CAA4B,IAA5B,CAAiC,IAAjC,CAA9B;AFEH,AEDA,ADHO,GDHZ,CAQI,ECLQ,MAAM,CAAC,KAAP,CAAa,KAAb,GAAqB,IAArB;AELZ,AFMS,IENT,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;ADSI,EAAA,SAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAU;AFEF,AGVZ,ADSQ,ADHA,EDII,EGVZ,AFMQ,MAAM,CAAC,EDIH,CAAA,CGVZ,AFMQ,GENR,KHUY,CAAA,SGVZ,CAAA,CHUY,GAAR,GGVJ,CAAA,QHUI,aGVJ,CAAA,CAAA,EAEA;AHQI,AEAI,ADHH,GALD,KDQA,CEAS,IFAT,EEAI,CFAJ,EEAkB,EFAlB,IEAI,CAFM,CAGN;AACA;AFDA,AGRR,AFKA,IELM,KHQO,AGRF,AFKX,GELc,IHQN,CAAa,ACHrB,GELsB,CAAC,GHQf,CAAqB,SGRf,CHQe,AGRQ,MHQR,CGRf,CHQqB,AGRnC;AHSY,AGRZ,ADSQ,ADbR,CAAA,EAAA,CEIM,EHQM,EECE,ECTF,EHQM,CAAC,AGRS,GHQhB,AECU,CFDC,EECE,ECTW,CHQxB,AGRyB,CDSR,YCTD,CAAuB,ODS1B,CCTG,ADSsB,CCTlD,IDSuD,kBAA9B,EAAkD;AFAlE,AGRT,ADSY,ICTN,CHME,SGNQ,GAAgB,QAAQ,CAAC,aAAT,CAAuB,aAAvB,CAAhC;AHSK,AGPL,ADQY,ADNZ,GDCY,CGHN,EDQM,CDNZ,CAAA,EEFY,GAAG,EDQM,ADNrB,EEFmB,ADQI,CDNR,ICMa,IDN5B,IEFmB,CAAA,OAAJ,CAAgB;AHQ3B,AGPF,ADKyE,ECLzE,EAAE,CDKqB,CCLnB,ADKE,CALM,CASN,GCVuB;AAClB,EAAA,OAAO,EAAE,CAClB,IAAI,UAAA,CAAA,OAAJ,EADkB,EACF,IAAI,WAAA,CAAA,OAAJ,EADE;AHSlB,AGV2B,ADWvB,CCXO,CAAf,EDWQ,QAAQ,CAAC,OAAT,CAAiB,KAAK,MAAL,CAAY,KAA7B,EAVM,CAYN;AACA;ACTR,ADUQ,MCVF,CAAC,OAAP,GAAiB,YAAA;AHMb,AGNmB,ADWf,EFLJ,OGNmB,IHMnB,CAAA,CGNyB,CAAC,OHM1B,CAAA,EGNmB,EHMnB,AGNmB,GHMnB,YAAA;AACI,AGPkC,CAA1C,QHOa,KAAL,CAAW,IAAX;AACH,AEIG,GFNJ,CEMI,QAAQ,CAAC,gBAAT,CAA0B,kBAA1B,EAA8C,KAAK,sBAAnD;ACXR,ADYK,GAjBD,CARJ,CA2BI,KCdM,CAAC,OAAX,GAAqB,YAAA;AHQjB,AGRuB,EHQvB,OGRuB,IHQvB,CAAA,CGR6B,CAAC,OHQ9B,CAAA,EGRuB,EAAA,CHQvB,GAAA,YAAA;AACI,AGTsC,CAA9C,QHSa,KAAL,CAAW,KAAX;AACH,AEKO,EAAA,CFPR,QEOQ,CAAA,SAAA,CAAA,kBAAA,GAAR,UAA2B,OAA3B,EAA+D;ACbnE,ADcQ,ICdJ,mBAAmB,SAAvB,EAAkC;AHS9B,AGRF,ADcM,EFNJ,AGRF,MDcY,GCdH,CAAC,CHQR,AEMe,CFNf,EEMkB,OFNlB,AEMyB,CFNzB,AEM0B,CCd5B,ADc2B,CCdH,ADclB,QFNJ,AGRF,CAAiC,EHQ/B,YAAA,wBGRF,EAA2C,KAA3C,CAAiD,UAAA,KAAA,EAAK;AHShD,AGRJ,ADcI,ICdJ,IHQQ,AEME,GCdH,CAAC,CHQK,EGRb,CAAY,CDcO,CFNX,CAAW,CEMG,CCdL,CAAC,GHQd,AEMuB,CAAC,CFND,EGR3B,cDcsB,IAA2B,KAAK,SAAlD;AFLI,AGRT,GAFD,QHUe,IAAL;AACH,AGRR,ADcO,KFRA,GEQI,GFNG,MEMP,EAAe;AFLX,AEMA,WFNK,AEMA,KFNL,CEMA,CAAY,IAAZ;AFLH,AEMA,KAFD,MAEO;AFLV,AEMO,GFZR,QEYa,MAAL,CAAY,KAAZ;AACH;AFNL,AESC,EFTD,CEHQ,CA5BZ,CA0CI,QFXA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACI,AEWJ,SFXS,KAAL,CAAW,KAAX,GAAmB,IAAnB;AACH,GAFD;;AAGA,AEUQ,EFVR,AEUQ,SAAA,CAAA,CFVR,CAAA,OEUQ,CAAA,CFVR,CAAA,MAAA,GAAA,WEUQ,CFVR,EEUA,YAAA;AFTI,AEUA,QAAM,CFVD,KAAL,CAAW,EEUI,GFVf,AEUkB,GFVC,KAAnB,AEU0B,CAAC,eAAT,IAA4B,SAA9C;AFTH,GAFD;AEYI,QAAI,SAAJ,EAAe;AFTnB,AEUQ,EFVR,SEUa,EFVb,CAAA,GEUQ,CAAY,IAAZ,CFVR,CAAA,UAAA,GAAA,YAAA;AACI,AEUC,KAFD,GFRI,GEUG,EFVE,KAAL,CAAW,KAAX,IAAoB,IAAxB,EAA8B;AAC1B,AEUA,WFVK,AEUA,MFVL,AEUA,CAAY,KAAZ;AFTH,AEUA,KFZD,MAEO;AACH,AEWP,GARO,QFHK,IAAL;AACH;AACJ,AEWL,GFjBI,MEiBJ,SAAA;AAtDA,CAAA,EAAA;AF4CA,SAAA,WAAA;AA3CA,AEsDA,CFtDA,EAAA,IEsDA,CAAA,OAAA,GAAe,SAAf;AFFA;;;;AAGA,OAAA,CAAA,OAAA,GAAe,WAAf,EAEA","file":"assets.71ddc51b.js","sourceRoot":"..","sourcesContent":["\r\n// Creamos una función llamada mediaPlayer que nos servirá como prototipo.\r\n\r\nclass MediaPlayer {\r\n    media: HTMLMediaElement;\r\n    plugins: Array<any>\r\n    constructor(config) {\r\n        this.media = config.el;\r\n        this.plugins = config.plugins || [];\r\n        this.initPlugins();\r\n    }\r\n    //this indica llamar a mediaplayer\r\n    private initPlugins() {\r\n        this.plugins.forEach(plugin => {\r\n            plugin.run(this);\r\n        });\r\n    }\r\n    /*  A mediaPlayer le asignamos una función llamada play usando prototype.\r\n     Esta función le dará inicio al video. */\r\n    //Si está pausado, puede darse play, si está en play, puede pausarse con click.\r\n    play() {\r\n        this.media.play();\r\n    }\r\n    pause() {\r\n        this.media.pause();\r\n    }\r\n    togglePlay() {\r\n        if (this.media.paused) {\r\n            this.play();\r\n        } else {\r\n            this.pause();\r\n        }\r\n    }\r\n    mute() {\r\n        this.media.muted = true;\r\n    }\r\n    unmute() {\r\n        this.media.muted = false;\r\n    }\r\n    unmuteMute() {\r\n        if (this.media.muted == true) {\r\n            this.unmute();\r\n        } else {\r\n            this.mute();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*    Luego con el botón se acciona una función llamada player que es una instancia del prototipo mediaPlayer que creamos.\r\nLa instancia se crea usando la palabra new. */\r\n\r\nexport default MediaPlayer;\r\n\r\n//Se debe exportar para poder usarse","import MediaPlayer from '../MediaPlayer'\r\n\r\nclass AutoPlay {\r\n    constructor() { }\r\n    run(player: MediaPlayer) {\r\n        if (!player.media.muted) {\r\n            player.media.muted = true;\r\n        }\r\n        player.play();\r\n    }\r\n}\r\nexport default AutoPlay;","\r\nimport MediaPlayer from '../MediaPlayer'\r\nclass AutoPause {\r\n    private threshold: number;\r\n    private player: MediaPlayer;\r\n    constructor() {\r\n        this.threshold = 0.25;\r\n        this.handleIntersection = this.handleIntersection.bind(this)\r\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this)\r\n    }\r\n    run(player) {\r\n        //Llamamos a la instancia de la clase\r\n        this.player = player;\r\n        //Creamos el intersection observer\r\n        //Primero recibe un handler y el segundo es ub objeto de configuración\r\n        const observer = new IntersectionObserver(this.handleIntersection, {\r\n            //Esto define qué percibirá del elemento, en este caso, 25% de elemento que sobre\r\n            threshold: this.threshold\r\n        });\r\n        //Lo que va a observar, que en este caso es el video\r\n        observer.observe(this.player.media)\r\n\r\n        //Este evento detiene algo si no está siendo visto, en este caso\r\n        //si sales de la pestaña del video, el se detendrá\r\n        //Esto es muy util para también detener info o carruseles que el usuario no esté viendo\r\n        //o incluso desactivar sonidos si se apaga la pantalla en descanso\r\n        document.addEventListener(\"visibilitychange\", this.handleVisibilityChange)\r\n    }\r\n\r\n    //Aquí hay que pasar una lista de entries, son todos los objetos que se están observando\r\n    private handleIntersection(entries: IntersectionObserverEntry[]) {\r\n        //Le indicamos que es un solo elemento de la lista\r\n        const entry = entries[0];\r\n        const isVisible = entry.intersectionRatio >= this.threshold\r\n\r\n        if (isVisible) {\r\n            this.player.play();\r\n        } else {\r\n            this.player.pause();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //Aquí la función que recibe, el cual es un boolean en el que si es true hace algo, y si es false,\r\n    //la idea es detenerlo, visibility sabrá cuando detenerlo\r\n    private handleVisibilityChange() {\r\n        const isVisible = document.visibilityState == \"visible\"\r\n        if (isVisible) {\r\n            this.player.play();\r\n        } else {\r\n            this.player.pause()\r\n        }\r\n\r\n    }\r\n\r\n}\r\nexport default AutoPause;","import MediaPlayer from './MediaPlayer'\r\nimport AutoPlay from './plugins/AutoPlay'\r\nimport AutoPause from './plugins/AutoPause'\r\n\r\n//Aquí, se debe importar el archivo media player para que funcione\r\nconst video = document.querySelector(\"video\");\r\nconst button: HTMLElement = document.querySelector(\"button\");\r\nconst unmuteMute: HTMLElement = document.querySelector('#unmuteMute')\r\n\r\nconst player = new MediaPlayer({\r\n  el: video, plugins: [\r\n    new AutoPlay(), new AutoPause()]\r\n});\r\n\r\nbutton.onclick = () => player.togglePlay();\r\nunmuteMute.onclick = () => player.unmuteMute();\r\n\r\nif ('serviceWorker' in navigator) {\r\n  navigator.serviceWorker.register('/sw.js').catch(error => {\r\n    console.log(error.message)\r\n  })\r\n}"]}