{"version":3,"sources":["ejercicios/typescript/index.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ,GACA;;AACA,IAAM,KAAK,GAAG,IAAd,EACA;;AACA,IAAI,SAAS,GAAG,EAAhB;AACA,IAAI,WAAW,GAAG,CAAlB;AACA,IAAI,SAAS,GAAG,SAAS,GAAG,WAA5B,EAEA;;AAEA,IAAI,MAAM,GAAa,EAAvB;AACA,MAAM,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,CAAT,EAEA;;AACA,IAAI,gBAAgB,GAA2B,EAA/C;AACA,gBAAgB,CAAC,IAAjB,CAAsB,SAAtB;AACA,gBAAgB,CAAC,IAAjB,CAAsB,CAAtB,GAEA;;AAEA,IAAK,KAAL;;AAAA,CAAA,UAAK,KAAL,EAAU;AACN,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,KAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACH,CAJD,EAAK,KAAK,KAAL,KAAK,GAAA,EAAA,CAAV,GAMA;;;AACA,IAAI,QAAQ,GAAU,KAAK,CAAC,IAA5B;AACA,OAAO,CAAC,GAAR,CAAY,QAAZ,GAEA;;AAEA,IAAI,OAAO,GAAQ,OAAnB;AACA,OAAO,GAAG;AAAE,EAAA,IAAI,EAAE;AAAR,CAAV,EAEA;;AACA,IAAI,OAAO,GAAW;AAAE,EAAA,IAAI,EAAE;AAAR,CAAtB,EAGA;;AACA,SAAS,GAAT,CAAa,CAAb,EAAwB,CAAxB,EAAiC;AAC7B,SAAO,CAAC,GAAG,CAAX;AACH;;AAED,IAAM,GAAG,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAf,EAEA;;AAEA,SAAS,WAAT,CAAqB,CAArB,EAA8B;AAC1B,SAAO,UAAU,CAAV,EAAmB;AACtB,WAAO,CAAC,GAAG,CAAX;AACH,GAFD;AAGH;;AAED,IAAM,OAAO,GAAG,WAAW,CAAC,CAAD,CAA3B;AACA,IAAM,SAAS,GAAG,OAAO,CAAC,CAAD,CAAzB,EAEA;;AACA,SAAS,QAAT,CAAkB,SAAlB,EAAqC,QAArC,EAAsD;AAClD,SAAU,SAAS,GAAA,GAAT,GAAa,QAAvB;AACH;;AAED,IAAM,OAAO,GAAG,QAAQ,CAAC,SAAD,CAAxB;AAWA,IAAI,IAAI,GAAe;AACnB,EAAA,KAAK,EAAE,CADY;AAEnB,EAAA,IAAI,EAAE;AAFa,CAAvB;;AAKA,SAAS,IAAT,CAAc,CAAd,EAA2B;AACvB,SAAO,CAAC,CAAC,IAAF,GAAS,CAAC,CAAC,KAAlB;AACH;;AAED,IAAM,KAAK,GAAG,IAAI,CAAC,IAAD,CAAlB;AACA,OAAO,CAAC,GAAR,CAAY,KAAZ;;AAEA,IAAI,CAAC,QAAL,GAAgB,YAAA;AACZ,SAAO,KAAK,KAAL,GAAa,uBAAgB,KAAK,KAAlC,GAA4C,WAAnD;AACH,CAFD;;AAIA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,QAAL,EAAZ","file":"typescript.72c601f0.js","sourceRoot":"..","sourcesContent":["console.log(\"Hello Typescript\")\r\n//Boolean\r\nconst muted = true;\r\n//números\r\nlet numerador = 42\r\nlet denominador = 6\r\nlet resultado = numerador / denominador;\r\n\r\n//Arreglos\r\n\r\nlet people: string[] = [];\r\npeople = ['Isabel', 'Nicole', 'Juan']\r\n\r\n//Arreglo de string y numeros\r\nlet peopleAndNumbers: Array<string | number> = [];\r\npeopleAndNumbers.push('Ricardo')\r\npeopleAndNumbers.push(1)\r\n\r\n//Enum\r\n\r\nenum Color {\r\n    Rojo = \"Rojo\",\r\n    Verde = \"Verde\",\r\n    Azul = \"Azul\"\r\n}\r\n\r\n//Asignar valor de objeto a variable\r\nlet colorFav: Color = Color.Rojo\r\nconsole.log(colorFav)\r\n\r\n//Any\r\n\r\nlet comodin: any = \"Joker\"\r\ncomodin = { type: \"wild\" }\r\n\r\n//Object\r\nlet someObj: object = { type: 'wild' }\r\n\r\n\r\n//funciones\r\nfunction add(a: number, b: number): number {\r\n    return a + b\r\n}\r\n\r\nconst sum = add(2, 6)\r\n\r\n//funciones que regresan funciones\r\n\r\nfunction createAdder(a: number): (number) => number {\r\n    return function (b: number) {\r\n        return b + a;\r\n    }\r\n}\r\n\r\nconst addFour = createAdder(5)\r\nconst fourPlus6 = addFour(6)\r\n\r\n//EL ? hace que el argumento sea undefined, o sea, puede omitirse\r\nfunction fullName(firstName: string, lastName?: string): string {\r\n    return `${firstName} ${lastName}`\r\n}\r\n\r\nconst richard = fullName('Richard')\r\n\r\n//Creando interface\r\n\r\n//EL ? volverá esa propiedad opcional por lo que rect puede omitirlo\r\ninterface Rectangulo {\r\n    ancho: number;\r\n    alto: number;\r\n    color?: Color\r\n}\r\n\r\nlet rect: Rectangulo = {\r\n    ancho: 4,\r\n    alto: 6\r\n}\r\n\r\nfunction area(r: Rectangulo) {\r\n    return r.alto * r.ancho;\r\n}\r\n\r\nconst areaR = area(rect)\r\nconsole.log(areaR)\r\n\r\nrect.toString = function () {\r\n    return this.color ? `Un rectágulo ${this.color}` : \"No existe\"\r\n}\r\n\r\nconsole.log(rect.toString())"]}